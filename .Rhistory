setwd("C:/Users/hyshim05/Desktop/hw-stat133/binomial/R")
library(binomial)
library(binomial)
library(binomial)
context("test for checker functions")
test_that("check_prob works as intended", {
expect_error(check_prob(0.5), "prob is a number between 0 and 1")
x <- c(seq(0, 1, 4))
expect_error(check_prob(x), "prob has a length of one")
expect_error(check_prob(-0.5), "error arises when prob is invalid")
})
library(binomial)
test_file("bin_choose.R")
library(testthat)
test_file("bin_chooseR")
test_file("bin_choose.R")
test_file("../../R/bin_choose.R")
setwd("C:/Users/hyshim05/Desktop/hw-stat133/binomial/R")
library(testthat)
test_that("bin_choose.R")
library(binomial)
library(testthat)
test_file("bin_choose.R")
getwd()
library(binomial)
library(testthat)
test_file("bin_choose.R")
library(binomial)
library(testthat)
test_file("bin_choose.R")
test_file("bin_choose.R")
library(binomial)
test_file("bin_choose.R")
check_prob(-0.5)
library(binomial)
test_file("bin_choose.R")
library(binomial)
test_file("bin_probability")
test_file("bin_probability.R")
library(binomial)
test_file("bin_probability.R")
source('C:/Users/hyshim05/Desktop/hw-stat133/binomial/testthat/testthat/test_bin_probability.R', echo=TRUE)
test_file("bin_probability.R")
library(binomial)
test_file("bin_probability.R")
test_file("bin_probability.R")
